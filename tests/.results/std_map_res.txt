------------------ 
Example map:

Size: 4
a => 10
b => 30
c => 50
d => 70
------------------ 
Iterator construct map:

Size: 4
a => 10
b => 30
c => 50
d => 70
------------------ 
Copy constructor map:

Size: 4
a => 10
b => 30
c => 50
d => 70
------------------ 
Special compare class map:

Size: 4
d => 70
c => 50
b => 30
a => 10
------------------ 
Pointer function compare map:

Size: 0
------------------ 
Assignment operator test:

Size: 4
a => 10
b => 30
c => 50
d => 70
------------------ 
Original:

Size: 7
1 => 7
2 => 14
3 => 21
4 => 28
5 => 35
6 => 1
7 => 0
------------------ 
Range constructor:

Size: 5
1 => 6
2 => 5
3 => 4
4 => 3
5 => 2
------------------ 
Copy:

Size: 7
1 => 5
2 => 10
3 => 15
4 => 20
5 => 25
6 => 1
7 => 0

After modifications

------------------ 
Original:

Size: 7
1 => 5
2 => 10
3 => 15
4 => 20
5 => 25
6 => 1
7 => 0
------------------ 
Range constructor:

Size: 0
------------------ 
Copy:

Size: 5
1 => 6
2 => 5
3 => 4
4 => 3
5 => 2
List contains: 9 elements.
42 => lol
50 => mdr
35 => funny
45 => bunny
21 => fizz
35 => this key is already inside
55 => fuzzy
38 => buzz
55 => inside too
---------------------------------------------
------------------ 
Mplst:

Size: 7
21 => fizz
35 => funny
38 => buzz
42 => lol
45 => bunny
50 => mdr
55 => fuzzy
------------------ 
Map for bounds testing - 1: 

Size: 10
1 => 3
2 => 6
3 => 9
4 => 12
5 => 15
6 => 18
7 => 21
8 => 24
9 => 27
10 => 30
-- [0] (const) --
with key [-10]:
lower_bound: 1 => 3
upper_bound: 1 => 3
equal_range: 1
-- [0] (const) --
with key [1]:
lower_bound: 1 => 3
upper_bound: 2 => 6
equal_range: 1
-- [0] (const) --
with key [5]:
lower_bound: 5 => 15
upper_bound: 6 => 18
equal_range: 1
-- [0] (const) --
with key [10]:
lower_bound: 10 => 30
upper_bound: end()
equal_range: 1
-- [0] (const) --
with key [50]:
lower_bound: end()
upper_bound: end()
equal_range: 1
------------------ 
Map for bounds testing - 2: 

Size: 10
1 => 3
2 => 6
3 => 9
4 => 12
5 => 15
6 => 18
7 => 21
8 => 24
9 => 27
10 => 30
-- [0] --
with key [5]:
lower_bound: 5 => 15
upper_bound: 6 => 18
equal_range: 1
------------------ 
Map for bounds testing - 3: 

Size: 10
1 => 3
2 => 6
3 => 404
4 => 12
5 => 15
6 => 18
7 => 21
8 => 842
9 => 27
10 => 30
------------------ 
Map for comparison - 1:

Size: 4
a => 2.3
b => 1.4
c => 0.3
d => 4.2
	-- [1] --
with [a and a]: key_comp: 0 | value_comp: 0
	-- [1] --
with [a and b]: key_comp: 1 | value_comp: 1
	-- [1] --
with [a and c]: key_comp: 1 | value_comp: 1
	-- [1] --
with [a and d]: key_comp: 1 | value_comp: 1
	-- [1] --
with [b and a]: key_comp: 0 | value_comp: 0
	-- [1] --
with [b and b]: key_comp: 0 | value_comp: 0
	-- [1] --
with [b and c]: key_comp: 1 | value_comp: 1
	-- [1] --
with [b and d]: key_comp: 1 | value_comp: 1
	-- [1] --
with [c and a]: key_comp: 0 | value_comp: 0
	-- [1] --
with [c and b]: key_comp: 0 | value_comp: 0
	-- [1] --
with [c and c]: key_comp: 0 | value_comp: 0
	-- [1] --
with [c and d]: key_comp: 1 | value_comp: 1
	-- [1] --
with [d and a]: key_comp: 0 | value_comp: 0
	-- [1] --
with [d and b]: key_comp: 0 | value_comp: 0
	-- [1] --
with [d and c]: key_comp: 0 | value_comp: 0
	-- [1] --
with [d and d]: key_comp: 0 | value_comp: 0
------------------ 
Map for comparison - 2:

Size: 4
a => 2.3
b => 1.4
c => 0.3
d => 4.2
is_empty: 0
------------------ 
Map for empty testing - 1:

Size: 7
a => 7
b => 6
c => 5
d => 4
e => 3
f => 2
g => 1
is_empty: 1
is_empty: 0
------------------ 
Map for empty testing - 2:

Size: 7
a => 21
b => 28
c => 35
d => 42
e => 3
f => 2
g => 1
------------------ 
Map for empty testing - 3:

Size: 7
a => 7
b => 6
c => 5
d => 4
e => 3
f => 2
g => 1
is_empty: 1
------------------ 
Map for empty testing - 4:

Size: 0
------------------ 
Map for erase testing:

Size: 10
0 => AAAAAAAAAA
1 => BBBBBBBBB
2 => CCCCCCCC
3 => DDDDDDD
4 => EEEEEE
5 => FFFFF
6 => GGGG
7 => HHH
8 => II
9 => J
-- [0] --
------------------ 
After erase:

Size: 9
0 => AAAAAAAAAA
2 => CCCCCCCC
3 => DDDDDDD
4 => EEEEEE
5 => FFFFF
6 => GGGG
7 => HHH
8 => II
9 => J
-- [0] --
------------------ 
After erase:

Size: 8
2 => CCCCCCCC
3 => DDDDDDD
4 => EEEEEE
5 => FFFFF
6 => GGGG
7 => HHH
8 => II
9 => J
-- [0] --
------------------ 
After erase:

Size: 7
2 => CCCCCCCC
3 => DDDDDDD
4 => EEEEEE
5 => FFFFF
6 => GGGG
7 => HHH
8 => II
-- [0] --
------------------ 
After erase:

Size: 4
5 => FFFFF
6 => GGGG
7 => HHH
8 => II
-- [0] --
------------------ 
After erase:

Size: 2
5 => FFFFF
8 => II
------------------ 
Map after some erasing:

Size: 4
5 => FFFFF
8 => II
10 => Hello
11 => Hi there
-- [0] --
------------------ 
After erase:

Size: 1
5 => FFFFF
------------------ 
Map after some adding:

Size: 5
5 => FFFFF
12 => ONE
13 => TWO
14 => THREE
15 => FOUR
-- [0] --
------------------ 
After erase:

Size: 0
------------------ 
Map after complete erasing:

Size: 0
------------------ 
Map for 2nd erase testing:

Size: 10
0 => AAAAAAAAAA
1 => BBBBBBBBB
2 => CCCCCCCC
3 => DDDDDDD
4 => EEEEEE
5 => FFFFF
6 => GGGG
7 => HHH
8 => II
9 => J
-- [0] --
------------------ 
After erase:

Size: 9
0 => AAAAAAAAAA
1 => BBBBBBBBB
3 => DDDDDDD
4 => EEEEEE
5 => FFFFF
6 => GGGG
7 => HHH
8 => II
9 => J
-- [0] --
------------------ 
After erase:

Size: 8
0 => AAAAAAAAAA
1 => BBBBBBBBB
4 => EEEEEE
5 => FFFFF
6 => GGGG
7 => HHH
8 => II
9 => J
-- [0] --
------------------ 
After erase:

Size: 7
1 => BBBBBBBBB
4 => EEEEEE
5 => FFFFF
6 => GGGG
7 => HHH
8 => II
9 => J
-- [0] --
------------------ 
After erase:

Size: 6
1 => BBBBBBBBB
4 => EEEEEE
5 => FFFFF
6 => GGGG
7 => HHH
8 => II
------------------ 
Map after deletions/additions:

Size: 8
-1 => Hello
1 => BBBBBBBBB
4 => EEEEEE
5 => FFFFF
6 => GGGG
7 => HHH
8 => II
10 => Hi there
-- [0] --
------------------ 
After erase:

Size: 8
-1 => Hello
1 => BBBBBBBBB
4 => EEEEEE
5 => FFFFF
6 => GGGG
7 => HHH
8 => II
10 => Hi there
-- [0] --
------------------ 
After erase:

Size: 7
-1 => Hello
4 => EEEEEE
5 => FFFFF
6 => GGGG
7 => HHH
8 => II
10 => Hi there
------------------ 
Map after finale deletions:

Size: 7
-1 => Hello
4 => EEEEEE
5 => FFFFF
6 => GGGG
7 => HHH
8 => II
10 => Hi there
------------------ 
Map for tricky erase testing:

Size: 31
12 => no
18 => bee
20 => idea
21 => fizz
22 => 123
23 => coconut
24 => 345
25 => funny
27 => 27
28 => diary
29 => 29
30 => buzz
33 => 33
35 => fiesta
38 => 38
42 => lol
43 => 1
44 => hello
45 => 2
46 => bunny
47 => 3
48 => world
49 => 4
50 => mdr
51 => 5
53 => this is a test
54 => 6
55 => fuzzy
60 => 7
80 => hey
90 => 8
-- [0] --
------------------ 
After erase:

Size: 30
12 => no
18 => bee
20 => idea
21 => fizz
22 => 123
23 => coconut
24 => 345
27 => 27
28 => diary
29 => 29
30 => buzz
33 => 33
35 => fiesta
38 => 38
42 => lol
43 => 1
44 => hello
45 => 2
46 => bunny
47 => 3
48 => world
49 => 4
50 => mdr
51 => 5
53 => this is a test
54 => 6
55 => fuzzy
60 => 7
80 => hey
90 => 8
-- [0] --
------------------ 
After erase:

Size: 29
12 => no
18 => bee
20 => idea
21 => fizz
22 => 123
23 => coconut
24 => 345
27 => 27
28 => diary
29 => 29
30 => buzz
33 => 33
35 => fiesta
38 => 38
42 => lol
43 => 1
44 => hello
45 => 2
46 => bunny
47 => 3
48 => world
49 => 4
50 => mdr
51 => 5
53 => this is a test
54 => 6
60 => 7
80 => hey
90 => 8
-- [0] --
------------------ 
After erase:

Size: 28
12 => no
18 => bee
20 => idea
21 => fizz
22 => 123
23 => coconut
27 => 27
28 => diary
29 => 29
30 => buzz
33 => 33
35 => fiesta
38 => 38
42 => lol
43 => 1
44 => hello
45 => 2
46 => bunny
47 => 3
48 => world
49 => 4
50 => mdr
51 => 5
53 => this is a test
54 => 6
60 => 7
80 => hey
90 => 8
-- [0] --
------------------ 
After erase:

Size: 27
12 => no
18 => bee
20 => idea
21 => fizz
22 => 123
23 => coconut
27 => 27
28 => diary
29 => 29
30 => buzz
33 => 33
35 => fiesta
38 => 38
42 => lol
43 => 1
44 => hello
45 => 2
46 => bunny
47 => 3
48 => world
49 => 4
50 => mdr
51 => 5
53 => this is a test
60 => 7
80 => hey
90 => 8
-- [0] --
------------------ 
After erase:

Size: 26
12 => no
18 => bee
20 => idea
21 => fizz
23 => coconut
27 => 27
28 => diary
29 => 29
30 => buzz
33 => 33
35 => fiesta
38 => 38
42 => lol
43 => 1
44 => hello
45 => 2
46 => bunny
47 => 3
48 => world
49 => 4
50 => mdr
51 => 5
53 => this is a test
60 => 7
80 => hey
90 => 8
-- [0] --
------------------ 
After erase:

Size: 25
12 => no
18 => bee
20 => idea
21 => fizz
23 => coconut
27 => 27
28 => diary
29 => 29
30 => buzz
33 => 33
35 => fiesta
38 => 38
42 => lol
43 => 1
44 => hello
45 => 2
46 => bunny
47 => 3
48 => world
49 => 4
50 => mdr
53 => this is a test
60 => 7
80 => hey
90 => 8
-- [0] --
------------------ 
After erase:

Size: 24
12 => no
18 => bee
20 => idea
23 => coconut
27 => 27
28 => diary
29 => 29
30 => buzz
33 => 33
35 => fiesta
38 => 38
42 => lol
43 => 1
44 => hello
45 => 2
46 => bunny
47 => 3
48 => world
49 => 4
50 => mdr
53 => this is a test
60 => 7
80 => hey
90 => 8
-- [0] --
------------------ 
After erase:

Size: 23
12 => no
18 => bee
20 => idea
23 => coconut
27 => 27
28 => diary
29 => 29
30 => buzz
33 => 33
35 => fiesta
38 => 38
42 => lol
43 => 1
44 => hello
45 => 2
46 => bunny
47 => 3
48 => world
49 => 4
50 => mdr
60 => 7
80 => hey
90 => 8
-- [0] --
------------------ 
After erase:

Size: 22
12 => no
18 => bee
23 => coconut
27 => 27
28 => diary
29 => 29
30 => buzz
33 => 33
35 => fiesta
38 => 38
42 => lol
43 => 1
44 => hello
45 => 2
46 => bunny
47 => 3
48 => world
49 => 4
50 => mdr
60 => 7
80 => hey
90 => 8
-- [0] --
------------------ 
After erase:

Size: 21
12 => no
18 => bee
27 => 27
28 => diary
29 => 29
30 => buzz
33 => 33
35 => fiesta
38 => 38
42 => lol
43 => 1
44 => hello
45 => 2
46 => bunny
47 => 3
48 => world
49 => 4
50 => mdr
60 => 7
80 => hey
90 => 8
-- [0] --
------------------ 
After erase:

Size: 20
12 => no
18 => bee
27 => 27
28 => diary
29 => 29
30 => buzz
33 => 33
35 => fiesta
38 => 38
43 => 1
44 => hello
45 => 2
46 => bunny
47 => 3
48 => world
49 => 4
50 => mdr
60 => 7
80 => hey
90 => 8
-- [0] --
------------------ 
After erase:

Size: 19
12 => no
18 => bee
27 => 27
28 => diary
29 => 29
30 => buzz
33 => 33
35 => fiesta
43 => 1
44 => hello
45 => 2
46 => bunny
47 => 3
48 => world
49 => 4
50 => mdr
60 => 7
80 => hey
90 => 8
-- [0] --
------------------ 
After erase:

Size: 18
12 => no
18 => bee
27 => 27
28 => diary
29 => 29
30 => buzz
33 => 33
43 => 1
44 => hello
45 => 2
46 => bunny
47 => 3
48 => world
49 => 4
50 => mdr
60 => 7
80 => hey
90 => 8
-- [0] --
------------------ 
After erase:

Size: 17
12 => no
18 => bee
27 => 27
28 => diary
29 => 29
30 => buzz
43 => 1
44 => hello
45 => 2
46 => bunny
47 => 3
48 => world
49 => 4
50 => mdr
60 => 7
80 => hey
90 => 8
------------------ 
Map after tricky erase testing:

Size: 17
12 => no
18 => bee
27 => 27
28 => diary
29 => 29
30 => buzz
43 => 1
44 => hello
45 => 2
46 => bunny
47 => 3
48 => world
49 => 4
50 => mdr
60 => 7
80 => hey
90 => 8
------------------ 
Map for find:

Size: 6
12 => no
25 => funny
27 => bee
42 => fgzgxfn
80 => hey
90 => 8
	-- FIND --
12 => no
map::find(3) returned end()
map::find(35) returned end()
90 => 8
map::find(100) returned end()
	-- COUNT --
map::count(-3)	returned [0]
map::count(12)	returned [1]
map::count(3)	returned [0]
map::count(35)	returned [0]
map::count(90)	returned [1]
map::count(100)	returned [0]
------------------ 
After some modifications:

Size: 6
12 => no
25 => funny
27 => newly inserted mapped_value
42 => fgzgxfn
80 => hey
90 => 8
const map.find(42)->second: [fgzgxfn]
const map.count(80): [1]
